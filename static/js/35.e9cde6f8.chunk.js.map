{"version":3,"file":"static/js/35.e9cde6f8.chunk.js","mappings":"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","sources":["components/UpcomingMovie/UpcomingMovie.jsx","components/WeeklyTrends/WeeklyTrends.jsx","pages/Home/Home.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  StyledUpcomingContentBtn,\n  StyledUpcomingContentText,\n  StyledUpcomingContentTitle,\n  StyledUpcomingContentWrap,\n  StyledUpcomingFilm,\n  StyledUpcomingImage,\n  StyledUpcomingListItem,\n  StyledUpcomingListLeft,\n  StyledUpcomingListText,\n  StyledUpcomingName,\n  StyledUpcomingThumb,\n  StyledUpcomingTitle,\n} from './UpcomingMovie.styled';\nimport { getUpcomingMovies } from 'services/getMovies';\nimport { StyledHeroContainer } from 'components/Hero/Hero.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const UpcomingMovie = ({\n  addToLibrary,\n  removeFromLibrary,\n  favoriteMovies,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [upcomingMovie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const updateComponent = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getUpcomingMovies();\n        setMovie(data.results[0]);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    updateComponent();\n  }, []);\n\n  const imagePath = 'https://image.tmdb.org/t/p/original/';\n  const isInLibrary =\n    favoriteMovies &&\n    upcomingMovie &&\n    favoriteMovies.some(favoriteMovie => favoriteMovie.id === upcomingMovie.id);\n\n  const handleClick = e => {\n    e.preventDefault();\n    addToLibrary(upcomingMovie);\n  };\n\n  const handleDelete = e => {\n    e.preventDefault();\n    removeFromLibrary(upcomingMovie.id);\n  };\n\n  return (\n    <section>\n      <StyledHeroContainer>\n        {isLoading && <Loader />}\n        {upcomingMovie && (\n          <>\n            <StyledUpcomingTitle>UPCOMING THIS MONTH</StyledUpcomingTitle>\n            <StyledUpcomingFilm>\n              <StyledUpcomingImage>\n                <source\n                  srcSet={imagePath + upcomingMovie.backdrop_path}\n                  media=\"(min-width: 768px)\"\n                  loading=\"lazy\"\n                />\n                <source\n                  srcSet={imagePath + upcomingMovie.poster_path}\n                  media=\"(min-width: 320px)\"\n                  loading=\"lazy\"\n                />\n                <img\n                  src={imagePath + upcomingMovie.poster_path}\n                  alt=\"Movie Poster\"\n                  loading=\"lazy\"\n                />\n              </StyledUpcomingImage>\n\n              <StyledUpcomingContentWrap>\n                <StyledUpcomingName>\n                  {upcomingMovie.original_title}\n                </StyledUpcomingName>\n\n                <StyledUpcomingThumb>\n                  <StyledUpcomingListLeft>\n                    <StyledUpcomingListItem>\n                      <StyledUpcomingListText>\n                        Release date\n                      </StyledUpcomingListText>\n                      <p style={{ marginLeft: '58px' }}>\n                        {upcomingMovie.release_date}\n                      </p>\n                    </StyledUpcomingListItem>\n                    <StyledUpcomingListItem>\n                      <StyledUpcomingListText>\n                        Vote / Votes\n                      </StyledUpcomingListText>\n                      <p style={{ marginLeft: '68px' }}>\n                        <span>{upcomingMovie.vote_average}</span> /{' '}\n                        <span>{upcomingMovie.vote_count}</span>\n                      </p>\n                    </StyledUpcomingListItem>\n                  </StyledUpcomingListLeft>\n\n                  <ul>\n                    <StyledUpcomingListItem>\n                      <StyledUpcomingListText>\n                        Popularity\n                      </StyledUpcomingListText>\n                      <p style={{ marginLeft: '78px' }}>\n                        {upcomingMovie.popularity}\n                      </p>\n                    </StyledUpcomingListItem>\n                    <StyledUpcomingListItem>\n                      <StyledUpcomingListText>Genre</StyledUpcomingListText>\n                      <p style={{ marginLeft: '108px' }}>\n                        Action, Science Fiction, Horror\n                      </p>\n                    </StyledUpcomingListItem>\n                  </ul>\n                </StyledUpcomingThumb>\n\n                <StyledUpcomingContentTitle>About</StyledUpcomingContentTitle>\n                <StyledUpcomingContentText>\n                  {upcomingMovie.overview}\n                </StyledUpcomingContentText>\n\n                {isInLibrary ? (\n                  <StyledUpcomingContentBtn\n                    type=\"button\"\n                    onClick={handleDelete}\n                  >\n                    Remove from library\n                  </StyledUpcomingContentBtn>\n                ) : (\n                  <StyledUpcomingContentBtn type=\"button\" onClick={handleClick}>\n                    Add to my library\n                  </StyledUpcomingContentBtn>\n                )}\n              </StyledUpcomingContentWrap>\n            </StyledUpcomingFilm>\n          </>\n        )}\n      </StyledHeroContainer>\n    </section>\n  );\n};\n","import { MoviesGalleryItem } from 'components/MoviesGalleryItem/MoviesGalleryItem';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  StyledCatalogContainer,\n  StyledCatalogList,\n  StyledWeeklyTrendsHeader,\n} from './WeeklyTrendsStyled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst WeeklyTrends = ({\n  weeklyTrendingMovies,\n  addToLibrary,\n  removeFromLibrary,\n  favoriteMovies,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [slicedWeeklyTrendingMovies, setweeklyTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    const updateComponent = async () => {\n      setIsLoading(true);\n      try {\n        const slicedData = weeklyTrendingMovies.slice(0, 3);\n        setweeklyTrendingMovies(slicedData);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    updateComponent();\n  }, [weeklyTrendingMovies]);\n\n  return (\n    <section>\n      <StyledCatalogContainer>\n        <StyledWeeklyTrendsHeader>\n          <h3>Weekly Trends</h3>\n          <Link to=\"/catalog\">See All</Link>\n        </StyledWeeklyTrendsHeader>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <StyledCatalogList>\n            {slicedWeeklyTrendingMovies.map(movie => (\n              <MoviesGalleryItem\n                key={movie.id}\n                movie={movie}\n                addToLibrary={addToLibrary}\n                removeFromLibrary={removeFromLibrary}\n                favoriteMovies={favoriteMovies}\n              />\n            ))}\n          </StyledCatalogList>\n        )}\n      </StyledCatalogContainer>\n    </section>\n  );\n};\n\nexport default WeeklyTrends;\n","import HomePageHero from 'components/Hero/Hero';\nimport { UpcomingMovie } from 'components/UpcomingMovie/UpcomingMovie';\nimport WeeklyTrends from 'components/WeeklyTrends/WeeklyTrends';\nimport { useEffect } from 'react';\n\nconst Home = ({\n  weeklyTrendingMovies,\n  addToLibrary,\n  removeFromLibrary,\n  favoriteMovies,\n  onChangePage,\n}) => {\n  useEffect(() => {\n    onChangePage(1);\n  }, [onChangePage]);\n\n  return (\n    <>\n      <HomePageHero\n        addToLibrary={addToLibrary}\n        removeFromLibrary={removeFromLibrary}\n        favoriteMovies={favoriteMovies}\n      />\n      <WeeklyTrends\n        weeklyTrendingMovies={weeklyTrendingMovies}\n        addToLibrary={addToLibrary}\n        removeFromLibrary={removeFromLibrary}\n        favoriteMovies={favoriteMovies}\n      />\n      <UpcomingMovie\n        addToLibrary={addToLibrary}\n        removeFromLibrary={removeFromLibrary}\n        favoriteMovies={favoriteMovies}\n      />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["UpcomingMovie","_ref","addToLibrary","removeFromLibrary","favoriteMovies","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","upcomingMovie","setMovie","useEffect","updateComponent","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getUpcomingMovies","sent","results","t0","console","log","message","finish","stop","apply","arguments","imagePath","isInLibrary","some","favoriteMovie","id","_jsx","children","_jsxs","StyledHeroContainer","Loader","_Fragment","StyledUpcomingTitle","StyledUpcomingFilm","StyledUpcomingImage","srcSet","backdrop_path","media","loading","poster_path","src","alt","StyledUpcomingContentWrap","StyledUpcomingName","original_title","StyledUpcomingThumb","StyledUpcomingListLeft","StyledUpcomingListItem","StyledUpcomingListText","style","marginLeft","release_date","vote_average","vote_count","popularity","StyledUpcomingContentTitle","StyledUpcomingContentText","overview","StyledUpcomingContentBtn","type","onClick","e","preventDefault","weeklyTrendingMovies","slicedWeeklyTrendingMovies","setweeklyTrendingMovies","slicedData","slice","error","StyledCatalogContainer","StyledWeeklyTrendsHeader","Link","to","StyledCatalogList","map","movie","MoviesGalleryItem","onChangePage","HomePageHero","WeeklyTrends"],"sourceRoot":""}